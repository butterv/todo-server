// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateUserRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b1212c297c1885f, []int{0}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ChangeEmailRequest struct {
	NewEmail             string   `protobuf:"bytes,1,opt,name=new_email,json=newEmail,proto3" json:"new_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeEmailRequest) Reset()         { *m = ChangeEmailRequest{} }
func (m *ChangeEmailRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeEmailRequest) ProtoMessage()    {}
func (*ChangeEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b1212c297c1885f, []int{1}
}

func (m *ChangeEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeEmailRequest.Unmarshal(m, b)
}
func (m *ChangeEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeEmailRequest.Marshal(b, m, deterministic)
}
func (m *ChangeEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeEmailRequest.Merge(m, src)
}
func (m *ChangeEmailRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeEmailRequest.Size(m)
}
func (m *ChangeEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeEmailRequest proto.InternalMessageInfo

func (m *ChangeEmailRequest) GetNewEmail() string {
	if m != nil {
		return m.NewEmail
	}
	return ""
}

type ChangePasswordRequest struct {
	CurrentPassword      string   `protobuf:"bytes,1,opt,name=current_password,json=currentPassword,proto3" json:"current_password,omitempty"`
	NewPassword          string   `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordRequest) Reset()         { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()    {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b1212c297c1885f, []int{2}
}

func (m *ChangePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordRequest.Unmarshal(m, b)
}
func (m *ChangePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordRequest.Marshal(b, m, deterministic)
}
func (m *ChangePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordRequest.Merge(m, src)
}
func (m *ChangePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordRequest.Size(m)
}
func (m *ChangePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordRequest proto.InternalMessageInfo

func (m *ChangePasswordRequest) GetCurrentPassword() string {
	if m != nil {
		return m.CurrentPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateUserRequest)(nil), "user.CreateUserRequest")
	proto.RegisterType((*ChangeEmailRequest)(nil), "user.ChangeEmailRequest")
	proto.RegisterType((*ChangePasswordRequest)(nil), "user.ChangePasswordRequest")
}

func init() { proto.RegisterFile("proto/v1/user.proto", fileDescriptor_1b1212c297c1885f) }

var fileDescriptor_1b1212c297c1885f = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4e, 0xfa, 0x40,
	0x14, 0xc7, 0x03, 0xf9, 0xfd, 0x0c, 0x3c, 0x8c, 0xe8, 0x08, 0xda, 0x0c, 0x9a, 0x60, 0xdd, 0xa8,
	0x8b, 0x4e, 0xd0, 0x9d, 0x5b, 0xc2, 0xde, 0x60, 0x5c, 0xb8, 0x22, 0x43, 0x7d, 0x62, 0x0d, 0xcc,
	0xd4, 0xe9, 0x94, 0xc6, 0xad, 0x57, 0xf0, 0x30, 0x1e, 0xc4, 0x2b, 0x78, 0x10, 0xd3, 0x99, 0x4e,
	0xa9, 0x10, 0x76, 0x7d, 0x7d, 0xdf, 0x3f, 0x7d, 0x9f, 0xc2, 0x61, 0xac, 0xa4, 0x96, 0x6c, 0x39,
	0x60, 0x69, 0x82, 0x2a, 0x30, 0x13, 0xf9, 0x97, 0x3f, 0xd3, 0x93, 0x99, 0x94, 0xb3, 0x39, 0x32,
	0x1e, 0x47, 0x8c, 0x0b, 0x21, 0x35, 0xd7, 0x91, 0x14, 0x89, 0xd5, 0xd0, 0x5e, 0xb1, 0x35, 0xd3,
	0x34, 0x7d, 0x66, 0xb8, 0x88, 0xf5, 0xbb, 0x5d, 0xfa, 0x23, 0x38, 0x18, 0x2a, 0xe4, 0x1a, 0x1f,
	0x12, 0x54, 0x63, 0x7c, 0x4b, 0x31, 0xd1, 0xa4, 0x03, 0xff, 0x71, 0xc1, 0xa3, 0xb9, 0x57, 0xeb,
	0xd7, 0x2e, 0x9a, 0x63, 0x3b, 0x10, 0x0a, 0x8d, 0x98, 0x27, 0x49, 0x26, 0xd5, 0x93, 0x57, 0x37,
	0x8b, 0x72, 0xf6, 0x07, 0x40, 0x86, 0x2f, 0x5c, 0xcc, 0x70, 0x94, 0x4b, 0x5d, 0x4e, 0x0f, 0x9a,
	0x02, 0xb3, 0x49, 0x35, 0xab, 0x21, 0x30, 0x33, 0x1a, 0x1f, 0xa1, 0x6b, 0x2d, 0x77, 0x45, 0x88,
	0x73, 0x5d, 0xc2, 0x7e, 0x98, 0x2a, 0x85, 0x42, 0x4f, 0xca, 0x3e, 0x6b, 0x6e, 0x17, 0xef, 0x9d,
	0x83, 0x9c, 0xc1, 0x6e, 0x5e, 0xb0, 0xf6, 0x59, 0x2d, 0x81, 0x99, 0x93, 0x5c, 0x7f, 0xd5, 0xa1,
	0x95, 0xdf, 0x76, 0x8f, 0x6a, 0x19, 0x85, 0x48, 0x1e, 0x01, 0x56, 0x07, 0x93, 0xe3, 0xc0, 0xc0,
	0xdc, 0x40, 0x40, 0x8f, 0x02, 0x4b, 0x2d, 0x70, 0xd4, 0x82, 0x51, 0x4e, 0xcd, 0xa7, 0x1f, 0xdf,
	0x3f, 0x9f, 0xf5, 0x8e, 0xdf, 0x76, 0x3f, 0x82, 0x85, 0xc6, 0x7b, 0x5b, 0xbb, 0x22, 0x1c, 0x5a,
	0x15, 0x08, 0xc4, 0x2b, 0xb2, 0x37, 0xb8, 0x6c, 0x0d, 0xef, 0x9b, 0x70, 0x4a, 0xbb, 0x65, 0xb8,
	0x41, 0xc7, 0x42, 0x13, 0x91, 0x57, 0xbc, 0xc2, 0xde, 0x5f, 0x68, 0xa4, 0x57, 0x6d, 0x59, 0x43,
	0xb9, 0xb5, 0xe8, 0xdc, 0x14, 0x9d, 0x52, 0xaf, 0x2c, 0x72, 0x08, 0x57, 0x5d, 0xd3, 0x1d, 0x63,
	0xba, 0xf9, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x5f, 0xc5, 0x74, 0x79, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangeEmail(ctx context.Context, in *ChangeEmailRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/user.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangeEmail(ctx context.Context, in *ChangeEmailRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/user.UserService/ChangeEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ChangePassword(ctx context.Context, in *ChangePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/user.UserService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*empty.Empty, error)
	ChangeEmail(context.Context, *ChangeEmailRequest) (*empty.Empty, error)
	ChangePassword(context.Context, *ChangePasswordRequest) (*empty.Empty, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) CreateUser(ctx context.Context, req *CreateUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUserServiceServer) ChangeEmail(ctx context.Context, req *ChangeEmailRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeEmail not implemented")
}
func (*UnimplementedUserServiceServer) ChangePassword(ctx context.Context, req *ChangePasswordRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangeEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangeEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/ChangeEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangeEmail(ctx, req.(*ChangeEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ChangePassword(ctx, req.(*ChangePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "ChangeEmail",
			Handler:    _UserService_ChangeEmail_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _UserService_ChangePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/user.proto",
}
